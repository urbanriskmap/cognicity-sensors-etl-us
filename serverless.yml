service: cognicity-sensors-etl

custom:
  projectName: us-dev

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: ${file(./.env.yml):region}
  stackTags:
    area: ${file(./.env.yml):areatag}

package:
  individually: true
  exclude: # Specify the directories and files which should be excluded in the deployment package
    - bin/functions/** # Include functions individually
    - bin/test/**
    - src/**
    - .git/**
    - .nyc_output/**
    - coverage/**
    - esdoc/**
    - .babelrc
    - .env
    - .eslintrc.js
    - .gitignore
    - .travis.yml
    - README.md

# Add one function for each Lambda
functions:
  etlGroundwaterSensor:
    handler: bin/functions/etl-sensors/usgs.handler
    package:
      include:
        - bin/functions/etl-sensors/usgs/**
    environment:
      API_KEY: ${file(./.env.yml):apikey}
      SENSOR_CODE: '62610'
      SERVER_ENDPOINT: ${file(./.env.yml):serverEndPoint}
    events:
      - schedule: rate(12 hours)

  etlGaugeHeightSensor:
    handler: bin/functions/etl-sensors/usgs.handler
    package:
      include:
        - bin/functions/etl-sensors/usgs/**
    environment:
      API_KEY: ${file(./.env.yml):apikey}
      SENSOR_CODE: '00065'
      SERVER_ENDPOINT: ${file(./.env.yml):serverEndPoint}
    events:
      - schedule: rate(12 hours)

  etlDischargeRateSensor:
    handler: bin/functions/etl-sensors/usgs.handler
    package:
      include:
        - bin/functions/etl-sensors/usgs/**
    environment:
      API_KEY: ${file(./.env.yml):apikey}
      SENSOR_CODE: '00060'
      SERVER_ENDPOINT: ${file(./.env.yml):serverEndPoint}
    events:
      - schedule: rate(12 hours)

  etlStreamElevationSensor:
    handler: bin/functions/etl-sensors/usgs.handler
    package:
      include:
        - bin/functions/etl-sensors/usgs/**
    environment:
      API_KEY: ${file(./.env.yml):apikey}
      SENSOR_CODE: '63160'
      SERVER_ENDPOINT: ${file(./.env.yml):serverEndPoint}
    events:
      - schedule: rate(12 hours)

  etlPrecipitationSensor:
    handler: bin/functions/etl-sensors/usgs.handler
    package:
      include:
        - bin/functions/etl-sensors/usgs/**
    environment:
      API_KEY: ${file(./.env.yml):apikey}
      SENSOR_CODE: '00045'
      SERVER_ENDPOINT: ${file(./.env.yml):serverEndPoint}
    events:
      - schedule: rate(12 hours)

  etlGroundwaterData:
    handler: bin/functions/etl-data/usgs.handler
    package:
      include:
        - bin/functions/etl-data/usgs/**
    environment:
      API_KEY: ${file(./.env.yml):apikey}
      RECORDS_PERIOD: P1D
      RECORDS_INTERVAL: PT15M
      SENSOR_CODE: '62610'
      SERVER_ENDPOINT: ${file(./.env.yml):serverEndPoint}
      HAS_UPSTREAM_DOWNSTREAM: 'false'
    timeout: 24
    events:
      - schedule: rate(15 minutes)

  etlGaugeHeightData:
    handler: bin/functions/etl-data/usgs.handler
    package:
      include:
        - bin/functions/etl-data/usgs/**
    environment:
      API_KEY: ${file(./.env.yml):apikey}
      RECORDS_PERIOD: P1D
      RECORDS_INTERVAL: PT15M
      SENSOR_CODE: '00065'
      SERVER_ENDPOINT: ${file(./.env.yml):serverEndPoint}
      HAS_UPSTREAM_DOWNSTREAM: 'false'
    timeout: 24
    events:
      - schedule: rate(15 minutes)

  etlDischargeRateData:
    handler: bin/functions/etl-data/usgs.handler
    package:
      include:
        - bin/functions/etl-data/usgs/**
    environment:
      API_KEY: ${file(./.env.yml):apikey}
      RECORDS_PERIOD: P1D
      RECORDS_INTERVAL: PT15M
      SENSOR_CODE: '00060'
      SERVER_ENDPOINT: ${file(./.env.yml):serverEndPoint}
      HAS_UPSTREAM_DOWNSTREAM: 'false'
    timeout: 24
    events:
      - schedule: rate(15 minutes)

  etlStreamElevationData:
    handler: bin/functions/etl-data/usgs.handler
    package:
      include:
        - bin/functions/etl-data/usgs/**
    environment:
      API_KEY: ${file(./.env.yml):apikey}
      RECORDS_PERIOD: P1D
      RECORDS_INTERVAL: PT15M
      SENSOR_CODE: '63160'
      SERVER_ENDPOINT: ${file(./.env.yml):serverEndPoint}
      HAS_UPSTREAM_DOWNSTREAM: 'true'
    timeout: 24
    events:
      - schedule: rate(15 minutes)

  etlPrecipitationData:
    handler: bin/functions/etl-data/usgs.handler
    package:
      include:
        - bin/functions/etl-data/usgs/**
    environment:
      API_KEY: ${file(./.env.yml):apikey}
      RECORDS_PERIOD: P1D
      RECORDS_INTERVAL: PT15M
      SENSOR_CODE: '00045'
      SERVER_ENDPOINT: ${file(./.env.yml):serverEndPoint}
      HAS_UPSTREAM_DOWNSTREAM: 'false'
    timeout: 24
    events:
      - schedule: rate(15 minutes)
