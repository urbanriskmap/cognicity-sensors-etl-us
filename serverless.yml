service: cognicity-sensors-etl

custom:
  projectName: us-${opt:stage}
  usgsSensorSchedule: rate(12 hours)
  usgsDataSchedule: rate(15 minutes)
  sfwmdTimeseriesSchedule: rate(30 minutes)
  sfwmdAggregateSchedule: rate(6 hours)
  noaaWaterLevelSchedule: rate(1 hour)

provider:
  name: aws
  profile: serverless
  runtime: nodejs8.10
  stage: ${opt:stage}
  region: ${file(./.env.yml):region}
  stackTags:
    area: ${file(./.env.yml):areatag}

package:
  individually: true
  exclude: # Specify the directories and files which should be excluded in the deployment package
    - .git/**
    - .nyc_output/**
    - bin/functions/** # Include functions individually
    - bin/test/**
    - coverage/**
    - esdoc/**
    - src/**
    - .babelrc
    - .env
    - .eslintrc.js
    - .gitignore
    - .travis.yml
    - package.json
    - package-lock.json
    - README.md
    - sample.env
    - sample.env.yml


# Add one function for each Lambda
functions:
  # USGS sensors
  etlGroundwaterSensor:
    handler: bin/functions/sensors/usgs/index.handler
    package:
      include:
        - bin/functions/sensors/usgs/**
    environment:
      API_KEY: ${file(./.env.yml):${opt:stage}-apikey}
      SENSOR_AGENCY: usgs
      USGS_SENSOR_CODE: '62610'
      SENSOR_UID_PROPERTY: uid
      SERVER_ENDPOINT: ${file(./.env.yml):${opt:stage}-serverEndPoint}
    timeout: 12
    events:
      - schedule: ${self:custom.usgsSensorSchedule}

  etlGaugeHeightSensor:
    handler: bin/functions/sensors/usgs/index.handler
    package:
      include:
        - bin/functions/sensors/usgs/**
    environment:
      API_KEY: ${file(./.env.yml):${opt:stage}-apikey}
      SENSOR_AGENCY: usgs
      USGS_SENSOR_CODE: '00065'
      SENSOR_UID_PROPERTY: uid
      SERVER_ENDPOINT: ${file(./.env.yml):${opt:stage}-serverEndPoint}
    timeout: 12
    events:
      - schedule: ${self:custom.usgsSensorSchedule}

  etlDischargeRateSensor:
    handler: bin/functions/sensors/usgs/index.handler
    package:
      include:
        - bin/functions/sensors/usgs/**
    environment:
      API_KEY: ${file(./.env.yml):${opt:stage}-apikey}
      SENSOR_AGENCY: usgs
      USGS_SENSOR_CODE: '00060'
      SENSOR_UID_PROPERTY: uid
      SERVER_ENDPOINT: ${file(./.env.yml):${opt:stage}-serverEndPoint}
    timeout: 12
    events:
      - schedule: ${self:custom.usgsSensorSchedule}

  etlStreamElevationSensor:
    handler: bin/functions/sensors/usgs/index.handler
    package:
      include:
        - bin/functions/sensors/usgs/**
    environment:
      API_KEY: ${file(./.env.yml):${opt:stage}-apikey}
      SENSOR_AGENCY: usgs
      USGS_SENSOR_CODE: '63160'
      SENSOR_UID_PROPERTY: uid
      SERVER_ENDPOINT: ${file(./.env.yml):${opt:stage}-serverEndPoint}
    timeout: 12
    events:
      - schedule: ${self:custom.usgsSensorSchedule}

  etlPrecipitationSensor:
    handler: bin/functions/sensors/usgs/index.handler
    package:
      include:
        - bin/functions/sensors/usgs/**
    environment:
      API_KEY: ${file(./.env.yml):${opt:stage}-apikey}
      SENSOR_AGENCY: usgs
      USGS_SENSOR_CODE: '00045'
      SENSOR_UID_PROPERTY: uid
      SERVER_ENDPOINT: ${file(./.env.yml):${opt:stage}-serverEndPoint}
    timeout: 12
    events:
      - schedule: ${self:custom.usgsSensorSchedule}

  # USGS Sensor Data
  etlGroundwaterData:
    handler: bin/functions/data/usgs/index.handler
    package:
      include:
        - bin/functions/data/usgs/**
    environment:
      API_KEY: ${file(./.env.yml):${opt:stage}-apikey}
      SENSOR_CHILD_PROPERTY: 'false'
      RECORDS_PERIOD: P1D
      RECORDS_INTERVAL: PT15M
      SENSOR_AGENCY: usgs
      USGS_SENSOR_CODE: '62610'
      SENSOR_UID_PROPERTY: uid
      SERVER_ENDPOINT: ${file(./.env.yml):${opt:stage}-serverEndPoint}
    timeout: 24
    events:
      - schedule: ${self:custom.usgsDataSchedule}

  etlGaugeHeightData:
    handler: bin/functions/data/usgs/index.handler
    package:
      include:
        - bin/functions/data/usgs/**
    environment:
      API_KEY: ${file(./.env.yml):${opt:stage}-apikey}
      SENSOR_CHILD_PROPERTY: 'false'
      RECORDS_PERIOD: P1D
      RECORDS_INTERVAL: PT15M
      SENSOR_AGENCY: usgs
      USGS_SENSOR_CODE: '00065'
      SENSOR_UID_PROPERTY: uid
      SERVER_ENDPOINT: ${file(./.env.yml):${opt:stage}-serverEndPoint}
    timeout: 24
    events:
      - schedule: ${self:custom.usgsDataSchedule}

  etlDischargeRateData:
    handler: bin/functions/data/usgs/index.handler
    package:
      include:
        - bin/functions/data/usgs/**
    environment:
      API_KEY: ${file(./.env.yml):${opt:stage}-apikey}
      SENSOR_CHILD_PROPERTY: 'false'
      RECORDS_PERIOD: P1D
      RECORDS_INTERVAL: PT15M
      SENSOR_AGENCY: usgs
      USGS_SENSOR_CODE: '00060'
      SENSOR_UID_PROPERTY: uid
      SERVER_ENDPOINT: ${file(./.env.yml):${opt:stage}-serverEndPoint}
    timeout: 24
    events:
      - schedule: ${self:custom.usgsDataSchedule}

  etlStreamElevationData:
    handler: bin/functions/data/usgs/index.handler
    package:
      include:
        - bin/functions/data/usgs/**
    environment:
      API_KEY: ${file(./.env.yml):${opt:stage}-apikey}
      SENSOR_CHILD_PROPERTY: 'true'
      RECORDS_PERIOD: P1D
      RECORDS_INTERVAL: PT15M
      SENSOR_AGENCY: usgs
      USGS_SENSOR_CODE: '63160'
      SENSOR_UID_PROPERTY: uid
      SERVER_ENDPOINT: ${file(./.env.yml):${opt:stage}-serverEndPoint}
    timeout: 24
    events:
      - schedule: ${self:custom.usgsDataSchedule}

  etlPrecipitationData:
    handler: bin/functions/data/usgs/index.handler
    package:
      include:
        - bin/functions/data/usgs/**
    environment:
      API_KEY: ${file(./.env.yml):${opt:stage}-apikey}
      SENSOR_CHILD_PROPERTY: 'false'
      RECORDS_PERIOD: P1D
      RECORDS_INTERVAL: PT15M
      SENSOR_AGENCY: usgs
      USGS_SENSOR_CODE: '00045'
      SENSOR_UID_PROPERTY: uid
      SERVER_ENDPOINT: ${file(./.env.yml):${opt:stage}-serverEndPoint}
    timeout: 24
    events:
      - schedule: ${self:custom.usgsDataSchedule}

  # SFWMD Upload Stations
  wmdUploadStations:
    handler: bin/functions/sensors/sfwmd/index.handler
    package:
      include:
        - bin/functions/sensors/sfwmd/**
    environment:
      API_KEY: ${file(./.env.yml):${opt:stage}-apikey}
      SENSOR_AGENCY: sfwmd
      SENSOR_UID_PROPERTY: stationId
      SERVER_ENDPOINT: ${file(./.env.yml):${opt:stage}-serverEndPoint}
    timeout: 24
    # Use 'ManualTrigger' Test in lambda function console after updating stations.js

  # SFWMD timeseries data
  etlWmdTimeseriesData:
    handler: bin/functions/data/sfwmd/timeseries/index.handler
    package:
      include:
        - bin/functions/data/sfwmd/timeseries/**
    environment:
      API_KEY: ${file(./.env.yml):${opt:stage}-apikey}
      DATA_TYPE: timeseries
      RECORDS_PERIOD: P1D
      RECORDS_INTERVAL: PT30M
      SENSOR_AGENCY: sfwmd
      SENSOR_UID_PROPERTY: stationId
      SERVER_ENDPOINT: ${file(./.env.yml):${opt:stage}-serverEndPoint}
    timeout: 120
    events:
      - schedule: ${self:custom.sfwmdTimeseriesSchedule}

  # SFWMD calulated daily mean data
  etlWmdAggregateData:
    handler: bin/functions/data/sfwmd/aggregate/index.handler
    package:
      include:
        - bin/functions/data/sfwmd/aggregate/**
    environment:
      API_KEY: ${file(./.env.yml):${opt:stage}-apikey}
      DATA_TYPE: aggregate
      RECORDS_PERIOD: P7D
      RECORDS_INTERVAL: PT6H
      SENSOR_AGENCY: sfwmd
      SENSOR_UID_PROPERTY: stationId
      SERVER_ENDPOINT: ${file(./.env.yml):${opt:stage}-serverEndPoint}
    timeout: 120
    events:
      - schedule: ${self:custom.sfwmdAggregateSchedule}

  # NOAA Upload Stations
  noaaUploadStations:
    handler: bin/functions/sensors/noaa/index.handler
    package:
      include:
        - bin/functions/sensors/noaa/**
    environment:
      API_KEY: ${file(./.env.yml):${opt:stage}-apikey}
      SENSOR_AGENCY: noaa
      SENSOR_UID_PROPERTY: station
      SERVER_ENDPOINT: ${file(./.env.yml):${opt:stage}-serverEndPoint}
    timeout: 24

  # NOAA water_level records
  etlNoaaRecordsData:
    handler: bin/functions/data/noaa/index.handler
    package:
      include:
        - bin/functions/data/noaa/**
    environment:
      API_KEY: ${file(./.env.yml):${opt:stage}-apikey}
      DATA_TYPE: water_level
      RECORDS_PERIOD: P1D
      RECORDS_INTERVAL: PT1H
      NOAA_PREDICTION_PERIOD: PT12H
      SENSOR_AGENCY: noaa
      SENSOR_UID_PROPERTY: station
      SERVER_ENDPOINT: ${file(./.env.yml):${opt:stage}-serverEndPoint}
    timeout: 120
    events:
      - schedule: ${self:custom.noaaWaterLevelSchedule}

  # NOAA water_level predictions
  etlNoaaPredictionsData:
    handler: bin/functions/data/noaa/index.handler
    package:
      include:
        - bin/functions/data/noaa/**
    environment:
      API_KEY: ${file(./.env.yml):${opt:stage}-apikey}
      DATA_TYPE: predictions
      RECORDS_PERIOD: P1D
      RECORDS_INTERVAL: PT1H
      NOAA_PREDICTION_PERIOD: PT12H
      SENSOR_AGENCY: noaa
      SENSOR_UID_PROPERTY: station
      SERVER_ENDPOINT: ${file(./.env.yml):${opt:stage}-serverEndPoint}
    timeout: 120
    events:
      - schedule: ${self:custom.noaaWaterLevelSchedule}
