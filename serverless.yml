service: sensorEtl

custom:
  projectName: riskmapUs

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: us-east-1
  stackTags:
    area: "US"

# Add one function for each Lambda
functions:
  getSensors:
    handler: bin/functions/metadata/fetch/index.getSensors
    environment:
      key: val
    events:
      - http:
          path: sensors/properties/{id}
          method: GET
          integration: lambda
          request:
            parameters:
              paths: # Optional param id, if specified, return properties for sensor with matching id
                id: false
  addSensor:
    handler: bin/functions/metadata/insert/index.addSensor
    environment:
      key: val
    events:
      - http:
          path: sensors/add
          method: POST
          integration: lambda
  getSensorData:
    handler: bin/functions/data/fetch/index.getSensorData
    environment:
      key: val
    events:
      - http:
          path: sensors/data/{id}
          method: GET
          integration: lambda
          request:
            parameters:
              paths: # Required parameter id
                id: true
  insertPumpsData: # Create one function for each sensor type, with appropriate triggers
    handler: bin/functions/data/insert/index.insertSensorData
    environment:
      SENSOR_TYPE: pumps
      key: val
    events:
      - schedule: rate(1 hour)
  insertWellsData: # Create one function for each sensor type, with appropriate triggers
    handler: bin/functions/data/insert/index.insertSensorData
    environment:
      SENSOR_TYPE: wells
      key: val
    events:
      - schedule: rate(1 hour)
      # - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
